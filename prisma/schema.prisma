// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Task {
  id            String      @id @default(cuid())
  incomingDate  DateTime    @map("incoming_date")
  createdDate   DateTime    @default(now()) @map("created_date")
  updatedDate   DateTime    @updatedAt @map("updated_date")
  taskNumber    String      @map("task_number")
  taskText      String      @map("task_text")
  responsible   Responsible @relation(fields: [responsibleId], references: [id])
  responsibleId String      @map("responsible_id")
  deadline      DateTime
  endDate       DateTime?   @map("end_date")
  status        Status      @default(CREATED)
  note          String?

  @@map("task")
}

//taskStatuses
enum Status {
  CREATED
  IN_PROCCESS
  SEND_TO_CONFRIM
  DONE
  ROLLED_BACK
}

model Responsible {
  id          String   @id @default(cuid())
  createdDate DateTime @default(now()) @map("created_date")
  updatedDate DateTime @updatedAt @map("updated_date")
  name        String   @unique
  tasks       Task[]
  users       User[]

  @@map("responsible")
}

model User {
  id            String       @id @default(cuid())
  createdAt     DateTime     @default(now()) @map("created_at")
  updatedAt     DateTime     @updatedAt @map("updated_at")
  role          Role         @relation(fields: [roleId], references: [id])
  roleId        Int          @map("role_id")
  login         String       @unique
  fullName      String       @map("full_name")
  password      String
  Responsible   Responsible? @relation(fields: [responsibleId], references: [id])
  responsibleId String?

  @@map("user")
}

model Role {
  id    Int    @unique
  name  String @unique
  users User[]

  @@map("role")
}
